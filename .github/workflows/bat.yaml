name: Build And Test
on: [push]
jobs:

  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        # Try to build for all supported Spark versions
        spark-version: ["2.2.0", "2.4.5", "2.4.7", "3.0.1", "3.0.1-hadoop3.2", "3.1.2"]
        # Build and test using these MATLAB releases
        matlab-release: ["R2021a","R2021b"]
    name: MATLAB ${{ matrix.matlab-release }} Spark ${{ matrix.spark-version }}        
    steps:
      # Get the source code
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: true
      # Configure build environment with JDK 8
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      # Use MATLAB to:
      #  * Build the JAR file
      #  * Download additional JARs and generate javaclasspath.txt
      #  * Copy javaclasspath.txt to current directory (needed for next step)
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          release: ${{ matrix.matlab-release }}

      - name: Build using MATLAB
        uses: matlab-actions/run-command@v1
        with:
          command: |
            run('Software/MATLAB/startup.m');
            C = matlab.sparkutils.Config.getInMemoryConfig();
            C.CurrentVersion = \"${{ matrix.spark-version }}\";
            C.saveConfig; buildMatlabSparkUtility();
            generateJavapathForSpark();
            copyfile('Software/MATLAB/javaclasspath.txt', '.');

      # Run the Units tests from the matlab-spark-api Module
      - name: Test using MATLAB
        uses: matlab-actions/run-command@v1
        with:
          command: |
            run('Software/MATLAB/startup.m');
            cd 'Software/MATLAB/test';
            runCITests('${{matrix.spark-version}}-${{matrix.matlab-release}}')       
      
      # Store test results as artifacts such that they can be used in the report job
      - name: Store Test Results as Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-results/*.xml      

  report:
    # Always try to report test results, failed tests will lead to
    # build-and-test failing, we want to see those test failures
    if: ${{ success() || failure() }}
    needs: build-and-test
    runs-on: ubuntu-latest
    name: Test Report
    steps:    
      # The test-report action requires the sources, get them
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: true 

      # Get test results from build-and-test step from Artifacts
      - name: Gather results from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: test-results

      # Create the final report
      - name: Create report
        uses: dorny/test-reporter@v1.5.0
        with:
          name: Final Test Report
          path: test-results/*.xml 
          reporter: java-junit