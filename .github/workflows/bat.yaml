name: Build And Test
on: [push, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spark-version: ["3.0.1","3.1.2"]
    name: Spark Version ${{ matrix.spark-version }}        
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Build using MATLAB
        uses: matlab-actions/run-command@v1
        with:
          command: "run('Software/MATLAB/startup.m'); C = matlab.sparkutils.Config.getInMemoryConfig(); C.CurrentVersion = \"${{ matrix.spark-version }}\"; C.saveConfig; buildMatlabSparkUtility(); generateJavapathForSpark(); copyfile('Software/MATLAB/javaclasspath.txt', '.');"
      - name: Test using MATLAB
        uses: matlab-actions/run-command@v1
        with:
          command: "run('Software/MATLAB/startup.m'); run('Software/MATLAB/test/runCITests.m')"
#        uses: matlab-actions/run-tests@v1
#        with:
#          source-folder: Modules/matlab-spark-api/Software/MATLAB/test/unit
#          test-results-junit: test-results/results.xml
      - name: Test Report
        if: success() || failure()
        uses: dorny/test-reporter@v1.5.0
        with:
          name: MATLAB Unit Test Results ${{ matrix.spark-version }}
          path: test-results/*.xml 
          reporter: java-junit
